/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.outbrain.aletheia.datum.envelope.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DatumEnvelope extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DatumEnvelope\",\"namespace\":\"com.outbrain.aletheia.datum.envelope.avro\",\"fields\":[{\"name\":\"datum_type_id\",\"type\":\"string\"},{\"name\":\"datum_schema_version\",\"type\":\"int\"},{\"name\":\"logical_timestamp\",\"type\":\"long\"},{\"name\":\"incarnation\",\"type\":\"int\",\"default\":0},{\"name\":\"source_host\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"creation_time\",\"type\":\"long\"},{\"name\":\"datumBytes\",\"type\":\"bytes\"},{\"name\":\"serDeType\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"datumKey\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"datum_unique_id\",\"type\":\"string\",\"default\":\"00000000-0000-0000-0000-000000000000\",\"logicalType\":\"uuid\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.lang.CharSequence datum_type_id;
   private int datum_schema_version;
   private long logical_timestamp;
   private int incarnation;
   private java.lang.CharSequence source_host;
   private long creation_time;
   private java.nio.ByteBuffer datumBytes;
   private java.lang.CharSequence serDeType;
   private java.lang.CharSequence datumKey;
   private java.lang.CharSequence datum_unique_id;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public DatumEnvelope() {}

  /**
   * All-args constructor.
   */
  public DatumEnvelope(java.lang.CharSequence datum_type_id, java.lang.Integer datum_schema_version, java.lang.Long logical_timestamp, java.lang.Integer incarnation, java.lang.CharSequence source_host, java.lang.Long creation_time, java.nio.ByteBuffer datumBytes, java.lang.CharSequence serDeType, java.lang.CharSequence datumKey, java.lang.CharSequence datum_unique_id) {
    this.datum_type_id = datum_type_id;
    this.datum_schema_version = datum_schema_version;
    this.logical_timestamp = logical_timestamp;
    this.incarnation = incarnation;
    this.source_host = source_host;
    this.creation_time = creation_time;
    this.datumBytes = datumBytes;
    this.serDeType = serDeType;
    this.datumKey = datumKey;
    this.datum_unique_id = datum_unique_id;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return datum_type_id;
    case 1: return datum_schema_version;
    case 2: return logical_timestamp;
    case 3: return incarnation;
    case 4: return source_host;
    case 5: return creation_time;
    case 6: return datumBytes;
    case 7: return serDeType;
    case 8: return datumKey;
    case 9: return datum_unique_id;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: datum_type_id = (java.lang.CharSequence)value$; break;
    case 1: datum_schema_version = (java.lang.Integer)value$; break;
    case 2: logical_timestamp = (java.lang.Long)value$; break;
    case 3: incarnation = (java.lang.Integer)value$; break;
    case 4: source_host = (java.lang.CharSequence)value$; break;
    case 5: creation_time = (java.lang.Long)value$; break;
    case 6: datumBytes = (java.nio.ByteBuffer)value$; break;
    case 7: serDeType = (java.lang.CharSequence)value$; break;
    case 8: datumKey = (java.lang.CharSequence)value$; break;
    case 9: datum_unique_id = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'datum_type_id' field.
   */
  public java.lang.CharSequence getDatumTypeId() {
    return datum_type_id;
  }

  /**
   * Sets the value of the 'datum_type_id' field.
   * @param value the value to set.
   */
  public void setDatumTypeId(java.lang.CharSequence value) {
    this.datum_type_id = value;
  }

  /**
   * Gets the value of the 'datum_schema_version' field.
   */
  public java.lang.Integer getDatumSchemaVersion() {
    return datum_schema_version;
  }

  /**
   * Sets the value of the 'datum_schema_version' field.
   * @param value the value to set.
   */
  public void setDatumSchemaVersion(java.lang.Integer value) {
    this.datum_schema_version = value;
  }

  /**
   * Gets the value of the 'logical_timestamp' field.
   */
  public java.lang.Long getLogicalTimestamp() {
    return logical_timestamp;
  }

  /**
   * Sets the value of the 'logical_timestamp' field.
   * @param value the value to set.
   */
  public void setLogicalTimestamp(java.lang.Long value) {
    this.logical_timestamp = value;
  }

  /**
   * Gets the value of the 'incarnation' field.
   */
  public java.lang.Integer getIncarnation() {
    return incarnation;
  }

  /**
   * Sets the value of the 'incarnation' field.
   * @param value the value to set.
   */
  public void setIncarnation(java.lang.Integer value) {
    this.incarnation = value;
  }

  /**
   * Gets the value of the 'source_host' field.
   */
  public java.lang.CharSequence getSourceHost() {
    return source_host;
  }

  /**
   * Sets the value of the 'source_host' field.
   * @param value the value to set.
   */
  public void setSourceHost(java.lang.CharSequence value) {
    this.source_host = value;
  }

  /**
   * Gets the value of the 'creation_time' field.
   */
  public java.lang.Long getCreationTime() {
    return creation_time;
  }

  /**
   * Sets the value of the 'creation_time' field.
   * @param value the value to set.
   */
  public void setCreationTime(java.lang.Long value) {
    this.creation_time = value;
  }

  /**
   * Gets the value of the 'datumBytes' field.
   */
  public java.nio.ByteBuffer getDatumBytes() {
    return datumBytes;
  }

  /**
   * Sets the value of the 'datumBytes' field.
   * @param value the value to set.
   */
  public void setDatumBytes(java.nio.ByteBuffer value) {
    this.datumBytes = value;
  }

  /**
   * Gets the value of the 'serDeType' field.
   */
  public java.lang.CharSequence getSerDeType() {
    return serDeType;
  }

  /**
   * Sets the value of the 'serDeType' field.
   * @param value the value to set.
   */
  public void setSerDeType(java.lang.CharSequence value) {
    this.serDeType = value;
  }

  /**
   * Gets the value of the 'datumKey' field.
   */
  public java.lang.CharSequence getDatumKey() {
    return datumKey;
  }

  /**
   * Sets the value of the 'datumKey' field.
   * @param value the value to set.
   */
  public void setDatumKey(java.lang.CharSequence value) {
    this.datumKey = value;
  }

  /**
   * Gets the value of the 'datum_unique_id' field.
   */
  public java.lang.CharSequence getDatumUniqueId() {
    return datum_unique_id;
  }

  /**
   * Sets the value of the 'datum_unique_id' field.
   * @param value the value to set.
   */
  public void setDatumUniqueId(java.lang.CharSequence value) {
    this.datum_unique_id = value;
  }

  /** Creates a new DatumEnvelope RecordBuilder */
  public static com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder newBuilder() {
    return new com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder();
  }
  
  /** Creates a new DatumEnvelope RecordBuilder by copying an existing Builder */
  public static com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder newBuilder(com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder other) {
    return new com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder(other);
  }
  
  /** Creates a new DatumEnvelope RecordBuilder by copying an existing DatumEnvelope instance */
  public static com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder newBuilder(com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope other) {
    return new com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder(other);
  }
  
  /**
   * RecordBuilder for DatumEnvelope instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DatumEnvelope>
    implements org.apache.avro.data.RecordBuilder<DatumEnvelope> {

    private java.lang.CharSequence datum_type_id;
    private int datum_schema_version;
    private long logical_timestamp;
    private int incarnation;
    private java.lang.CharSequence source_host;
    private long creation_time;
    private java.nio.ByteBuffer datumBytes;
    private java.lang.CharSequence serDeType;
    private java.lang.CharSequence datumKey;
    private java.lang.CharSequence datum_unique_id;

    /** Creates a new Builder */
    private Builder() {
      super(com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.datum_type_id)) {
        this.datum_type_id = data().deepCopy(fields()[0].schema(), other.datum_type_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.datum_schema_version)) {
        this.datum_schema_version = data().deepCopy(fields()[1].schema(), other.datum_schema_version);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.logical_timestamp)) {
        this.logical_timestamp = data().deepCopy(fields()[2].schema(), other.logical_timestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.incarnation)) {
        this.incarnation = data().deepCopy(fields()[3].schema(), other.incarnation);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.source_host)) {
        this.source_host = data().deepCopy(fields()[4].schema(), other.source_host);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.creation_time)) {
        this.creation_time = data().deepCopy(fields()[5].schema(), other.creation_time);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.datumBytes)) {
        this.datumBytes = data().deepCopy(fields()[6].schema(), other.datumBytes);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.serDeType)) {
        this.serDeType = data().deepCopy(fields()[7].schema(), other.serDeType);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.datumKey)) {
        this.datumKey = data().deepCopy(fields()[8].schema(), other.datumKey);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.datum_unique_id)) {
        this.datum_unique_id = data().deepCopy(fields()[9].schema(), other.datum_unique_id);
        fieldSetFlags()[9] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DatumEnvelope instance */
    private Builder(com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope other) {
            super(com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.SCHEMA$);
      if (isValidValue(fields()[0], other.datum_type_id)) {
        this.datum_type_id = data().deepCopy(fields()[0].schema(), other.datum_type_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.datum_schema_version)) {
        this.datum_schema_version = data().deepCopy(fields()[1].schema(), other.datum_schema_version);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.logical_timestamp)) {
        this.logical_timestamp = data().deepCopy(fields()[2].schema(), other.logical_timestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.incarnation)) {
        this.incarnation = data().deepCopy(fields()[3].schema(), other.incarnation);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.source_host)) {
        this.source_host = data().deepCopy(fields()[4].schema(), other.source_host);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.creation_time)) {
        this.creation_time = data().deepCopy(fields()[5].schema(), other.creation_time);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.datumBytes)) {
        this.datumBytes = data().deepCopy(fields()[6].schema(), other.datumBytes);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.serDeType)) {
        this.serDeType = data().deepCopy(fields()[7].schema(), other.serDeType);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.datumKey)) {
        this.datumKey = data().deepCopy(fields()[8].schema(), other.datumKey);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.datum_unique_id)) {
        this.datum_unique_id = data().deepCopy(fields()[9].schema(), other.datum_unique_id);
        fieldSetFlags()[9] = true;
      }
    }

    /** Gets the value of the 'datum_type_id' field */
    public java.lang.CharSequence getDatumTypeId() {
      return datum_type_id;
    }
    
    /** Sets the value of the 'datum_type_id' field */
    public com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder setDatumTypeId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.datum_type_id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'datum_type_id' field has been set */
    public boolean hasDatumTypeId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'datum_type_id' field */
    public com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder clearDatumTypeId() {
      datum_type_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'datum_schema_version' field */
    public java.lang.Integer getDatumSchemaVersion() {
      return datum_schema_version;
    }
    
    /** Sets the value of the 'datum_schema_version' field */
    public com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder setDatumSchemaVersion(int value) {
      validate(fields()[1], value);
      this.datum_schema_version = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'datum_schema_version' field has been set */
    public boolean hasDatumSchemaVersion() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'datum_schema_version' field */
    public com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder clearDatumSchemaVersion() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'logical_timestamp' field */
    public java.lang.Long getLogicalTimestamp() {
      return logical_timestamp;
    }
    
    /** Sets the value of the 'logical_timestamp' field */
    public com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder setLogicalTimestamp(long value) {
      validate(fields()[2], value);
      this.logical_timestamp = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'logical_timestamp' field has been set */
    public boolean hasLogicalTimestamp() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'logical_timestamp' field */
    public com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder clearLogicalTimestamp() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'incarnation' field */
    public java.lang.Integer getIncarnation() {
      return incarnation;
    }
    
    /** Sets the value of the 'incarnation' field */
    public com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder setIncarnation(int value) {
      validate(fields()[3], value);
      this.incarnation = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'incarnation' field has been set */
    public boolean hasIncarnation() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'incarnation' field */
    public com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder clearIncarnation() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'source_host' field */
    public java.lang.CharSequence getSourceHost() {
      return source_host;
    }
    
    /** Sets the value of the 'source_host' field */
    public com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder setSourceHost(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.source_host = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'source_host' field has been set */
    public boolean hasSourceHost() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'source_host' field */
    public com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder clearSourceHost() {
      source_host = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'creation_time' field */
    public java.lang.Long getCreationTime() {
      return creation_time;
    }
    
    /** Sets the value of the 'creation_time' field */
    public com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder setCreationTime(long value) {
      validate(fields()[5], value);
      this.creation_time = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'creation_time' field has been set */
    public boolean hasCreationTime() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'creation_time' field */
    public com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder clearCreationTime() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'datumBytes' field */
    public java.nio.ByteBuffer getDatumBytes() {
      return datumBytes;
    }
    
    /** Sets the value of the 'datumBytes' field */
    public com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder setDatumBytes(java.nio.ByteBuffer value) {
      validate(fields()[6], value);
      this.datumBytes = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'datumBytes' field has been set */
    public boolean hasDatumBytes() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'datumBytes' field */
    public com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder clearDatumBytes() {
      datumBytes = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'serDeType' field */
    public java.lang.CharSequence getSerDeType() {
      return serDeType;
    }
    
    /** Sets the value of the 'serDeType' field */
    public com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder setSerDeType(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.serDeType = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'serDeType' field has been set */
    public boolean hasSerDeType() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'serDeType' field */
    public com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder clearSerDeType() {
      serDeType = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'datumKey' field */
    public java.lang.CharSequence getDatumKey() {
      return datumKey;
    }
    
    /** Sets the value of the 'datumKey' field */
    public com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder setDatumKey(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.datumKey = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'datumKey' field has been set */
    public boolean hasDatumKey() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'datumKey' field */
    public com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder clearDatumKey() {
      datumKey = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'datum_unique_id' field */
    public java.lang.CharSequence getDatumUniqueId() {
      return datum_unique_id;
    }
    
    /** Sets the value of the 'datum_unique_id' field */
    public com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder setDatumUniqueId(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.datum_unique_id = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'datum_unique_id' field has been set */
    public boolean hasDatumUniqueId() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'datum_unique_id' field */
    public com.outbrain.aletheia.datum.envelope.avro.DatumEnvelope.Builder clearDatumUniqueId() {
      datum_unique_id = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    public DatumEnvelope build() {
      try {
        DatumEnvelope record = new DatumEnvelope();
        record.datum_type_id = fieldSetFlags()[0] ? this.datum_type_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.datum_schema_version = fieldSetFlags()[1] ? this.datum_schema_version : (java.lang.Integer) defaultValue(fields()[1]);
        record.logical_timestamp = fieldSetFlags()[2] ? this.logical_timestamp : (java.lang.Long) defaultValue(fields()[2]);
        record.incarnation = fieldSetFlags()[3] ? this.incarnation : (java.lang.Integer) defaultValue(fields()[3]);
        record.source_host = fieldSetFlags()[4] ? this.source_host : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.creation_time = fieldSetFlags()[5] ? this.creation_time : (java.lang.Long) defaultValue(fields()[5]);
        record.datumBytes = fieldSetFlags()[6] ? this.datumBytes : (java.nio.ByteBuffer) defaultValue(fields()[6]);
        record.serDeType = fieldSetFlags()[7] ? this.serDeType : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.datumKey = fieldSetFlags()[8] ? this.datumKey : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.datum_unique_id = fieldSetFlags()[9] ? this.datum_unique_id : (java.lang.CharSequence) defaultValue(fields()[9]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
