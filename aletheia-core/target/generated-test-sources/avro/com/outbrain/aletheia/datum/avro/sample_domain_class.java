/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.outbrain.aletheia.datum.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class sample_domain_class extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"sample_domain_class\",\"namespace\":\"com.outbrain.aletheia.datum.avro\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"myNumber\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"myString\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"eventTimestamp\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"shouldBeSent\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.lang.Integer id;
   private java.lang.Double myNumber;
   private java.lang.CharSequence myString;
   private java.lang.Long eventTimestamp;
   private java.lang.Boolean shouldBeSent;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public sample_domain_class() {}

  /**
   * All-args constructor.
   */
  public sample_domain_class(java.lang.Integer id, java.lang.Double myNumber, java.lang.CharSequence myString, java.lang.Long eventTimestamp, java.lang.Boolean shouldBeSent) {
    this.id = id;
    this.myNumber = myNumber;
    this.myString = myString;
    this.eventTimestamp = eventTimestamp;
    this.shouldBeSent = shouldBeSent;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return myNumber;
    case 2: return myString;
    case 3: return eventTimestamp;
    case 4: return shouldBeSent;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Integer)value$; break;
    case 1: myNumber = (java.lang.Double)value$; break;
    case 2: myString = (java.lang.CharSequence)value$; break;
    case 3: eventTimestamp = (java.lang.Long)value$; break;
    case 4: shouldBeSent = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.Integer getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Integer value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'myNumber' field.
   */
  public java.lang.Double getMyNumber() {
    return myNumber;
  }

  /**
   * Sets the value of the 'myNumber' field.
   * @param value the value to set.
   */
  public void setMyNumber(java.lang.Double value) {
    this.myNumber = value;
  }

  /**
   * Gets the value of the 'myString' field.
   */
  public java.lang.CharSequence getMyString() {
    return myString;
  }

  /**
   * Sets the value of the 'myString' field.
   * @param value the value to set.
   */
  public void setMyString(java.lang.CharSequence value) {
    this.myString = value;
  }

  /**
   * Gets the value of the 'eventTimestamp' field.
   */
  public java.lang.Long getEventTimestamp() {
    return eventTimestamp;
  }

  /**
   * Sets the value of the 'eventTimestamp' field.
   * @param value the value to set.
   */
  public void setEventTimestamp(java.lang.Long value) {
    this.eventTimestamp = value;
  }

  /**
   * Gets the value of the 'shouldBeSent' field.
   */
  public java.lang.Boolean getShouldBeSent() {
    return shouldBeSent;
  }

  /**
   * Sets the value of the 'shouldBeSent' field.
   * @param value the value to set.
   */
  public void setShouldBeSent(java.lang.Boolean value) {
    this.shouldBeSent = value;
  }

  /** Creates a new sample_domain_class RecordBuilder */
  public static com.outbrain.aletheia.datum.avro.sample_domain_class.Builder newBuilder() {
    return new com.outbrain.aletheia.datum.avro.sample_domain_class.Builder();
  }
  
  /** Creates a new sample_domain_class RecordBuilder by copying an existing Builder */
  public static com.outbrain.aletheia.datum.avro.sample_domain_class.Builder newBuilder(com.outbrain.aletheia.datum.avro.sample_domain_class.Builder other) {
    return new com.outbrain.aletheia.datum.avro.sample_domain_class.Builder(other);
  }
  
  /** Creates a new sample_domain_class RecordBuilder by copying an existing sample_domain_class instance */
  public static com.outbrain.aletheia.datum.avro.sample_domain_class.Builder newBuilder(com.outbrain.aletheia.datum.avro.sample_domain_class other) {
    return new com.outbrain.aletheia.datum.avro.sample_domain_class.Builder(other);
  }
  
  /**
   * RecordBuilder for sample_domain_class instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<sample_domain_class>
    implements org.apache.avro.data.RecordBuilder<sample_domain_class> {

    private java.lang.Integer id;
    private java.lang.Double myNumber;
    private java.lang.CharSequence myString;
    private java.lang.Long eventTimestamp;
    private java.lang.Boolean shouldBeSent;

    /** Creates a new Builder */
    private Builder() {
      super(com.outbrain.aletheia.datum.avro.sample_domain_class.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.outbrain.aletheia.datum.avro.sample_domain_class.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.myNumber)) {
        this.myNumber = data().deepCopy(fields()[1].schema(), other.myNumber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.myString)) {
        this.myString = data().deepCopy(fields()[2].schema(), other.myString);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.eventTimestamp)) {
        this.eventTimestamp = data().deepCopy(fields()[3].schema(), other.eventTimestamp);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.shouldBeSent)) {
        this.shouldBeSent = data().deepCopy(fields()[4].schema(), other.shouldBeSent);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing sample_domain_class instance */
    private Builder(com.outbrain.aletheia.datum.avro.sample_domain_class other) {
            super(com.outbrain.aletheia.datum.avro.sample_domain_class.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.myNumber)) {
        this.myNumber = data().deepCopy(fields()[1].schema(), other.myNumber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.myString)) {
        this.myString = data().deepCopy(fields()[2].schema(), other.myString);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.eventTimestamp)) {
        this.eventTimestamp = data().deepCopy(fields()[3].schema(), other.eventTimestamp);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.shouldBeSent)) {
        this.shouldBeSent = data().deepCopy(fields()[4].schema(), other.shouldBeSent);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.Integer getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public com.outbrain.aletheia.datum.avro.sample_domain_class.Builder setId(java.lang.Integer value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public com.outbrain.aletheia.datum.avro.sample_domain_class.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'myNumber' field */
    public java.lang.Double getMyNumber() {
      return myNumber;
    }
    
    /** Sets the value of the 'myNumber' field */
    public com.outbrain.aletheia.datum.avro.sample_domain_class.Builder setMyNumber(java.lang.Double value) {
      validate(fields()[1], value);
      this.myNumber = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'myNumber' field has been set */
    public boolean hasMyNumber() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'myNumber' field */
    public com.outbrain.aletheia.datum.avro.sample_domain_class.Builder clearMyNumber() {
      myNumber = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'myString' field */
    public java.lang.CharSequence getMyString() {
      return myString;
    }
    
    /** Sets the value of the 'myString' field */
    public com.outbrain.aletheia.datum.avro.sample_domain_class.Builder setMyString(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.myString = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'myString' field has been set */
    public boolean hasMyString() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'myString' field */
    public com.outbrain.aletheia.datum.avro.sample_domain_class.Builder clearMyString() {
      myString = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'eventTimestamp' field */
    public java.lang.Long getEventTimestamp() {
      return eventTimestamp;
    }
    
    /** Sets the value of the 'eventTimestamp' field */
    public com.outbrain.aletheia.datum.avro.sample_domain_class.Builder setEventTimestamp(java.lang.Long value) {
      validate(fields()[3], value);
      this.eventTimestamp = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'eventTimestamp' field has been set */
    public boolean hasEventTimestamp() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'eventTimestamp' field */
    public com.outbrain.aletheia.datum.avro.sample_domain_class.Builder clearEventTimestamp() {
      eventTimestamp = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'shouldBeSent' field */
    public java.lang.Boolean getShouldBeSent() {
      return shouldBeSent;
    }
    
    /** Sets the value of the 'shouldBeSent' field */
    public com.outbrain.aletheia.datum.avro.sample_domain_class.Builder setShouldBeSent(java.lang.Boolean value) {
      validate(fields()[4], value);
      this.shouldBeSent = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'shouldBeSent' field has been set */
    public boolean hasShouldBeSent() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'shouldBeSent' field */
    public com.outbrain.aletheia.datum.avro.sample_domain_class.Builder clearShouldBeSent() {
      shouldBeSent = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public sample_domain_class build() {
      try {
        sample_domain_class record = new sample_domain_class();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Integer) defaultValue(fields()[0]);
        record.myNumber = fieldSetFlags()[1] ? this.myNumber : (java.lang.Double) defaultValue(fields()[1]);
        record.myString = fieldSetFlags()[2] ? this.myString : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.eventTimestamp = fieldSetFlags()[3] ? this.eventTimestamp : (java.lang.Long) defaultValue(fields()[3]);
        record.shouldBeSent = fieldSetFlags()[4] ? this.shouldBeSent : (java.lang.Boolean) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
